[{"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\index.js":"1","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\App.js":"2","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\components\\reusables\\ReusableStyles.js":"3","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\store.js":"4","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Reducers\\rootReducer.js":"5","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Reducers\\authReducer.js":"6","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\pages\\auth\\Signup.js":"7","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Actions\\authActions.js":"8","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Actions\\types\\index.js":"9","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\pages\\auth\\Login.js":"10"},{"size":432,"mtime":1611083465815,"results":"11","hashOfConfig":"12"},{"size":850,"mtime":1611646394346,"results":"13","hashOfConfig":"12"},{"size":920,"mtime":1611646394482,"results":"14","hashOfConfig":"12"},{"size":394,"mtime":1611260775585,"results":"15","hashOfConfig":"12"},{"size":144,"mtime":1611260775562,"results":"16","hashOfConfig":"12"},{"size":617,"mtime":1611702645683,"results":"17","hashOfConfig":"12"},{"size":6853,"mtime":1611707149641,"results":"18","hashOfConfig":"12"},{"size":1409,"mtime":1611708945132,"results":"19","hashOfConfig":"12"},{"size":62,"mtime":1611646394664,"results":"20","hashOfConfig":"12"},{"size":6631,"mtime":1611702588861,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"yggs5a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\index.js",[],["45","46"],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\App.js",["47"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport ReusableStyles from './components/reusables/ReusableStyles';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport Signup from './pages/auth/Signup';\r\nimport Login from './pages/auth/Login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route exact path=\"/register\" component={Signup}/>\r\n                    <Route exact path=\"/login\" component={Login}/>\r\n                </Switch>\r\n\r\n                <ReusableStyles/>\r\n            </div>\r\n        </Router>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\components\\reusables\\ReusableStyles.js",[],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\store.js",[],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Reducers\\rootReducer.js",[],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Reducers\\authReducer.js",["48","49"],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\pages\\auth\\Signup.js",[],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Actions\\authActions.js",[],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\redux\\Actions\\types\\index.js",[],"C:\\Users\\Mine\\workspace\\jobs\\paymentAutomation\\dashboard\\dashboard\\src\\pages\\auth\\Login.js",["50"],"import React, {useState} from 'react'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport loginImg from '../../assets/images/login.png';\r\nimport {loginUser} from '../../redux/Actions/authActions';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Signup = ({login}) => {\r\n\r\n    const Styles = () => {\r\n        return (\r\n            <style jsx=\"true\">\r\n                {\r\n                    ` .signup {\r\n                        min-height: 100vh;\r\n                    }\r\n\r\n                    .signupInner {\r\n                        min-height: 100vh;\r\n                    }\r\n\r\n                    .signupInner_imgHolder {\r\n                        width: 75%;\r\n                        margin: 0 auto;\r\n                    }\r\n\r\n                    .hasBgColor {\r\n                        background: #95ABDC;\r\n                    }\r\n\r\n                    .signupInner_formHolder {\r\n                        width: 75%;\r\n                        margin: 0 auto;\r\n                        padding: 1em;\r\n\r\n                    }\r\n\r\n                    .signupForm .btn_holder{\r\n                        width: fit-content;\r\n                        width: -moz-fit-content;\r\n                        margin: 0 auto;\r\n                    }\r\n\r\n                    .form_element {\r\n                        border-bottom: 1px solid lightgray;\r\n                        width: 90%;\r\n                    }\r\n\r\n                    .form_element input {\r\n                        width: 85%;\r\n                        outline: none;\r\n                        padding: 0.6em;\r\n                        border: none;\r\n                        background: #fff;\r\n                        transition: all 0.35s ease;\r\n                    }\r\n\r\n                    .form_element i {\r\n                        color: #95abdc;\r\n                    }\r\n\r\n                    .form_element:focus,\r\n                    .form_element:hover {\r\n                        border-bottom: 1px solid var(--default_blue);\r\n                    }\r\n\r\n                    @media (max-width: 766px){\r\n                        .signupInner_formHolder{\r\n                            width: 90%;\r\n                        }\r\n                    }\r\n                     `\r\n                }</style>\r\n        )\r\n    }\r\n\r\n    const [showpassword,\r\n        setShowpassword] = useState(false);\r\n\r\n    const formFields = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [loginData,\r\n        setLoginData] = useState(formFields);\r\n\r\n    const {email, password} = loginData;\r\n\r\n    const handleChange = (e) => {\r\n        setLoginData({\r\n            ...loginData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        login(loginData);\r\n\r\n        setLoginData({\r\n            ...loginData,\r\n            email: '',\r\n            password: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"signup center\">\r\n                <Row className=\"signupInner w-100\">\r\n                    <Col md={6} className=\"hasBgColor align_only\">\r\n                        <div className=\"signupInner_imgHolder\">\r\n                            <img src={loginImg} alt=\"\" className=\"w-100\"/>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={6} className=\"align_only\">\r\n                        <div className=\"signupInner_formHolder\">\r\n                            <div className=\"\">\r\n                                <h2 className=\"section__head--mid text_is_blue\">\r\n                                    Sign In\r\n                                </h2>\r\n                                <p className=\"section__text\">Welcom Back, Its been a while</p>\r\n\r\n                                <form className=\"signupForm\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form_element mt-2\">\r\n                                        <i className=\"fas fa-envelope pr-2\"></i>\r\n                                        <input\r\n                                            name=\"email\"\r\n                                            onChange={handleChange}\r\n                                            value={email}\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            required/>\r\n                                    </div>\r\n\r\n                                    <div className=\"form_element mt-2\">\r\n                                        <i className=\"fas fa-lock pr-2\"></i>\r\n                                        <input\r\n                                            name=\"password\"\r\n                                            onChange={handleChange}\r\n                                            value={password}\r\n                                            type={showpassword\r\n                                            ? 'text'\r\n                                            : 'password'}\r\n                                            placeholder=\"Password\"\r\n                                            required/>\r\n                                        <i\r\n                                            className={showpassword\r\n                                            ? 'fas fa-eye pointer'\r\n                                            : 'fas fa-eye-slash pointer'}\r\n                                            onClick={() => setShowpassword(!showpassword)}></i>\r\n                                    </div>\r\n\r\n                                    <div className=\"btn_holder mt-3\">\r\n                                        <button type=\"submit\" className=\"default_btn\">Login</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                                <div className=\"v_align mt-3\">\r\n                                    <span className=\"section__text--mid\">Dont have an account? </span>\r\n                                    <Link to='/register'>Register Here</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Styles/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (oldUser) => dispatch(loginUser(oldUser))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isLoggedIn: state.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":15,"column":13,"nodeType":"61","messageId":"62","endLine":15,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":22,"column":13,"nodeType":"61","messageId":"62","endLine":22,"endColumn":18},{"ruleId":"55","severity":1,"message":"63","line":182,"column":7,"nodeType":"57","messageId":"58","endLine":182,"endColumn":22},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'mapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]